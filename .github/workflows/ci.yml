name: CI (Build & Publish)

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - '.gitignore'

env:
  CARVEL_PKG_NAME: watchdog-graphql.local.com
  REACTOR_REPO: mitul01/watchdog-reactor

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:

<<<<<<< Updated upstream
      - name: Install Carvel Tool
=======
<<<<<<< Updated upstream
    - name: Add new version to latest commit
      id: version
      shell: bash
      run: |
        if [ ${{github.event_name}} == 'push' ]
        then
          git fetch --prune --unshallow --tags
=======
      - name: Install Carvel Tool
        shell: bash
        run: |
          wget -O- https://carvel.dev/install.sh > install.sh
          chmod a+x ./install.sh
          sudo bash install.sh

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: mitul01
          password: ${{ secrets.PAT }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Push generated package to another repository
        if: steps.semantic.outputs.new_release_published == 'true'
        shell: bash
        run: |
>>>>>>> Stashed changes
          git config --global user.name 'DevOpsBot'
          git config --global user.email 'devops-bot@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          RELEASE_VERSION_TAG=$(git tag --sort=taggerdate | tail -1)
          RELEASE_VERSION=$(echo ${RELEASE_VERSION_TAG} | sed 's/^v//')
          major=$(echo "$RELEASE_VERSION" | cut -d. -f1)
          minor=$(echo "$RELEASE_VERSION" | cut -d. -f2)
          patch=$(echo "$RELEASE_VERSION" | cut -d. -f3)
          new_patch=$((patch + 1))
          NEW_RELEASE_VERSION=("$major.$minor.$new_patch")
          echo Updating version from ${RELEASE_VERSION} to ${NEW_RELEASE_VERSION}
          git tag v${NEW_RELEASE_VERSION}
          git push origin v${NEW_RELEASE_VERSION}
        else
          echo "Upgrade release type. Skipping Creation of patch version..."
        fi

  get-release-version:
      needs: create-new-version
      runs-on: ubuntu-latest
      outputs:
        RELEASE_TYPE: ${{ steps.version.outputs.RELEASE_TYPE }}
        NEW_RELEASE_VERSION: ${{ steps.version.outputs.NEW_RELEASE_VERSION }}

      steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get Version
        id: version
>>>>>>> Stashed changes
        shell: bash
        run: |
          wget -O- https://carvel.dev/install.sh > install.sh
          chmod a+x ./install.sh
          sudo bash install.sh

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Login to GitHub Container Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: mitul01
          password: ${{ secrets.PAT }}

      - name: Release New Package
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          cd packaging
          kctrl package release --version ${{ steps.semantic.outputs.new_release_version }} -y

      - name: Push generated package to another repository
        if: steps.semantic.outputs.new_release_published == 'true'
        shell: bash
        run: |
          git config --global user.name 'DevOpsBot'
          git config --global user.email 'devops-bot@users.noreply.github.com'
          git clone https://x-access-token:${{ secrets.PAT }}@github.com/${{ env.REACTOR_REPO }}
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ env.REACTOR_REPO }}
          cp -r packaging/carvel-artifacts/packages/${{ env.CARVEL_PKG_NAME }}/. watchdog-reactor/packages/${{ env.CARVEL_PKG_NAME }}/${{ steps.semantic.outputs.new_release_version }}/
          cd watchdog-reactor
          git add .
          git commit -m "chore(publish-package): ${{ env.CARVEL_PKG_NAME }}:${{ steps.semantic.outputs.new_release_version }}"
          git push origin