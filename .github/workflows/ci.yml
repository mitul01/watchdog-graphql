name: CI (Build & Publish)

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'README.md'
      - '.github/**'

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # buildpack builder
  BUILDER: paketobuildpacks/builder-jammy-tiny
  # version type
  VERSION_TYPE: PATCH
  
jobs:
  maven-build-test:
    uses: ./.github/workflows/maven.yml

  create-new-version:
    runs-on: ubuntu-latest
    outputs:
      NEW_RELEASE_VERSION: ${{ steps.version.outputs.NEW_RELEASE_VERSION }}
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Add new version to latest commit
      id: version
      shell: bash
      run: |
        echo "RELEASE_VERSION_TAG=$(git describe --tags --match "v*")" >> "$GITHUB_ENV"
        echo "RELEASE_VERSION=$(( echo "${{env.RELEASE_VERSION_TAG}}" | sed 's/^v//' ))" >> "$GITHUB_ENV"
        echo "NEW_RELEASE_VERSION=${{env.RELEASE_VERSION}} + 0.0.1" >> "GITHUB_OUTPUT"
        git tag v${{env.NEW_RELEASE_VERSION}}
        git push origin v${{env.NEW_RELEASE_VERSION}}
    

  build-publish:
    needs: maven-build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup Pack CLI
      uses: buildpacks/github-actions/setup-pack@v5.0.0
  
    - name: Extract Git Metadata
      shell: bash
      run: |
        echo "SHA_TAG=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
        echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"

    - name: Build Image using Pack CLI
      run: |
        #!/usr/bin/env bash
        pack build ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.SHA_TAG}} --path . --builder ${{env.BUILDER}}

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Publish Image
      run: |
        docker push ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.SHA_TAG}}
    
    - name: Repository Dispatch to watchdog-config
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.WATCHDOG_CONFIG_REPO_TOKEN }}
        repository: ${{ github.actor }}/watchdog-config
        event-type: publish-pkg
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ env.SHA_TAG }}", "app_name": "watchdog-graphql", "image": "${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.SHA_TAG}}", "version": ${{needs.create-new-version.outputs.NEW_RELEASE_VERSION}}, "version_type": ${{env.VERSION_TYPE}} }'
