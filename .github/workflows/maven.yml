# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  workflow_call:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.10
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client
          export PGPASSWORD='postgres';
          psql -h localhost -U postgres -c 'CREATE DATABASE watchdog'
          mvn -B package --file pom.xml -DPOSTGRES_HOST=localhost -DPOSTGRES_USER=postgres -DPOSTGRES_DB=watchdog -DPOSTGRES_PASSWORD=postgres
