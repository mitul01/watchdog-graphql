# Models
type User {
    userId: ID!
    userName: String!
    firstName: String!
    lastName: String!
    installedBots: [Bot!]!
    accounts: [Account!]
    expenses: [Expense]
}

type Bot {
    botId: ID!
    name: String!
    users: [User!]
}

type Account {
    accountId: ID!
    name: String!
    users: [User!]
    expenses: [Expense]
}

type Expense {
    id: ID!
    name: String!
    amount: Float!
    account: Account!
    paidBy: User!
}

# DTO
input BotInput {
    name: String
}

input UserInput {
    userName: String
    firstName: String
    lastName: String
    botId: ID
}

input AccountInput {
    name: String
    userIds: [ID]
}

input ExpenseInput {
    name: String
    amount: Float
    accountId: ID
    paidByUserId: ID
}

# UseCases
type Query {
    users: [User]!
    bots: [Bot]!
    accounts: [Account]!
    expenses: [Expense]!
}

type Mutation {
    createBot(bot: BotInput): Bot!
    updateBot(botId: ID, bot: BotInput): Bot!
    deleteBot(botId: ID): Boolean!

    createUser(user: UserInput): User!
    updateUser(userId: ID,user: UserInput): User!
    deleteUser(userId: ID): Boolean!

    createAccount(account: AccountInput): Account!
    updateAccount(accountId: ID,account: AccountInput): Account!
    deleteAccount(accountId: ID): Boolean!

    createExpense(expense: ExpenseInput): Expense!
    updateExpense(expenseId: ID,expense: ExpenseInput): Expense!
    deleteExpense(expenseId: ID): Boolean!
}